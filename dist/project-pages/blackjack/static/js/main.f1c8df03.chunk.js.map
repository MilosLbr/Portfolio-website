{"version":3,"sources":["Cards/SVG-cards-1.3 sync nonrecursive /.svg$","Cards/SVG-cards-1.3/10_of_clubs.svg","Cards/SVG-cards-1.3/10_of_diamonds.svg","Cards/SVG-cards-1.3/10_of_hearts.svg","Cards/SVG-cards-1.3/10_of_spades.svg","Cards/SVG-cards-1.3/2_of_clubs.svg","Cards/SVG-cards-1.3/2_of_diamonds.svg","Cards/SVG-cards-1.3/2_of_hearts.svg","Cards/SVG-cards-1.3/2_of_spades.svg","Cards/SVG-cards-1.3/3_of_clubs.svg","Cards/SVG-cards-1.3/3_of_diamonds.svg","Cards/SVG-cards-1.3/3_of_hearts.svg","Cards/SVG-cards-1.3/3_of_spades.svg","Cards/SVG-cards-1.3/4_of_clubs.svg","Cards/SVG-cards-1.3/4_of_diamonds.svg","Cards/SVG-cards-1.3/4_of_hearts.svg","Cards/SVG-cards-1.3/4_of_spades.svg","Cards/SVG-cards-1.3/5_of_clubs.svg","Cards/SVG-cards-1.3/5_of_diamonds.svg","Cards/SVG-cards-1.3/5_of_hearts.svg","Cards/SVG-cards-1.3/5_of_spades.svg","Cards/SVG-cards-1.3/6_of_clubs.svg","Cards/SVG-cards-1.3/6_of_diamonds.svg","Cards/SVG-cards-1.3/6_of_hearts.svg","Cards/SVG-cards-1.3/6_of_spades.svg","Cards/SVG-cards-1.3/7_of_clubs.svg","Cards/SVG-cards-1.3/7_of_diamonds.svg","Cards/SVG-cards-1.3/7_of_hearts.svg","Cards/SVG-cards-1.3/7_of_spades.svg","Cards/SVG-cards-1.3/8_of_clubs.svg","Cards/SVG-cards-1.3/8_of_diamonds.svg","Cards/SVG-cards-1.3/8_of_hearts.svg","Cards/SVG-cards-1.3/8_of_spades.svg","Cards/SVG-cards-1.3/9_of_clubs.svg","Cards/SVG-cards-1.3/9_of_diamonds.svg","Cards/SVG-cards-1.3/9_of_hearts.svg","Cards/SVG-cards-1.3/9_of_spades.svg","Cards/SVG-cards-1.3/ace_of_clubs.svg","Cards/SVG-cards-1.3/ace_of_diamonds.svg","Cards/SVG-cards-1.3/ace_of_hearts.svg","Cards/SVG-cards-1.3/ace_of_spades.svg","Cards/SVG-cards-1.3/jack_of_clubs.svg","Cards/SVG-cards-1.3/jack_of_diamonds.svg","Cards/SVG-cards-1.3/jack_of_hearts.svg","Cards/SVG-cards-1.3/jack_of_spades.svg","Cards/SVG-cards-1.3/king_of_clubs.svg","Cards/SVG-cards-1.3/king_of_diamonds.svg","Cards/SVG-cards-1.3/king_of_hearts.svg","Cards/SVG-cards-1.3/king_of_spades.svg","Cards/SVG-cards-1.3/queen_of_clubs.svg","Cards/SVG-cards-1.3/queen_of_diamonds.svg","Cards/SVG-cards-1.3/queen_of_hearts.svg","Cards/SVG-cards-1.3/queen_of_spades.svg","Cards/FaceDown sync nonrecursive /.jpg$","Cards/FaceDown/faceDownCard.jpg","Cards/Chips sync nonrecursive /.png$","Cards/Chips/1.png","Cards/Chips/10.png","Cards/Chips/100.png","Cards/Chips/1000.png","Cards/Chips/10000.png","Cards/Chips/5.png","Cards/Chips/50.png","Cards/Chips/500.png","Constants/cardObjects.js","Components/Presentational/GameRules.js","Constants/calculateScore.js","Reducers/herlperFunctions.js","Components/Presentational/Score.js","Components/Presentational/Cards.js","Components/DealerCards.js","Actions/DealerMove.js","Constants/ActionTypes.js","Actions/EndGame.js","Components/PlayerCards.js","Components/Presentational/Pot.js","Components/Presentational/EndGameResult.js","Components/Table.js","Actions/CancelBet.js","Components/Presentational/Button.js","Components/ButtonsContainer.js","Actions/Deal.js","Actions/Hit.js","Actions/Stand.js","Actions/Double.js","Components/Presentational/Chips.js","Components/ChipsContainer.js","Actions/PlaceBet.js","Reducers/endgameFunctions.js","Reducers/RootReducer.js","App.js","serviceWorker.js","index.js"],"names":["map","./10_of_clubs.svg","./10_of_diamonds.svg","./10_of_hearts.svg","./10_of_spades.svg","./2_of_clubs.svg","./2_of_diamonds.svg","./2_of_hearts.svg","./2_of_spades.svg","./3_of_clubs.svg","./3_of_diamonds.svg","./3_of_hearts.svg","./3_of_spades.svg","./4_of_clubs.svg","./4_of_diamonds.svg","./4_of_hearts.svg","./4_of_spades.svg","./5_of_clubs.svg","./5_of_diamonds.svg","./5_of_hearts.svg","./5_of_spades.svg","./6_of_clubs.svg","./6_of_diamonds.svg","./6_of_hearts.svg","./6_of_spades.svg","./7_of_clubs.svg","./7_of_diamonds.svg","./7_of_hearts.svg","./7_of_spades.svg","./8_of_clubs.svg","./8_of_diamonds.svg","./8_of_hearts.svg","./8_of_spades.svg","./9_of_clubs.svg","./9_of_diamonds.svg","./9_of_hearts.svg","./9_of_spades.svg","./ace_of_clubs.svg","./ace_of_diamonds.svg","./ace_of_hearts.svg","./ace_of_spades.svg","./jack_of_clubs.svg","./jack_of_diamonds.svg","./jack_of_hearts.svg","./jack_of_spades.svg","./king_of_clubs.svg","./king_of_diamonds.svg","./king_of_hearts.svg","./king_of_spades.svg","./queen_of_clubs.svg","./queen_of_diamonds.svg","./queen_of_hearts.svg","./queen_of_spades.svg","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","./faceDownCard.jpg","./1.png","./10.png","./100.png","./1000.png","./10000.png","./5.png","./50.png","./500.png","GameRules","react_default","a","createElement","className","calculateScore","cardsToEvaluate","calculations","values","elem","value","push","reduce","total","sum","includes","i","length","filteredCalculations","filter","Math","max","apply","toConsumableArray","min","images","forEach","corectedElem","replace","importAll","require","updateObject","oldObject","newValues","assign","Hit","deck","playerCards","currentPlayer","slice","hitCard","src","symbol","card","shift","playerScore","firstMove","dealerCards","dealerScore","blackjack","score","cards","compareScores","result","text","console","log","Score","_ref","containerClass","playerTurn","scoreArray","split","parseInt","faceDownCard","image","correctedElem","importImage","Card","backOfTheCard","imageSource","hidden","alt","draggable","AllCardsContainer","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","timeouts","componentCleanup","bind","assertThisInitialized","_this$props","player","cardsAreDealt","dealerMove","endGame","comparisonResult","setTimeout","window","addEventListener","clearInterval","removeEventListener","_this$props2","ind","Cards_Card","key","Presentational_Score","React","Component","DealerCards","connect","state","dispatch","move","type","EndGame","PlayerCards","Pot","pot","cancelBet","onClick","title","EndGameResult","endGameText","undefined","Components_DealerCards","Presentational_Pot","Presentational_EndGameResult","Components_PlayerCards","Button","buttonText","handleClick","styleClass","dealCards","hit","stand","double","buttons","Presentational_Button","chipsImages","Chip","chipImage","AllPlayersChips","_ref2","currentMoney","placeBet","chips","possibleChips","calculateAvailableChips","idx","Chips_Chip","ChipsContainer","cash","target","getAttribute","PlaceBet","suits","cardObject","j","shuffle","array","t","m","arrayCopy","floor","random","shuffledDeck","initialState","charlieWin","RootReducer","arguments","action","newCurrentMoneyVal","newPotVal","Double","alert","doublePot","winBet","store","createStore","App","tooltip","document","getElementById","tooltipText","style","visibility","event","stopPropagation","es","Presentational_GameRules","Components_Table","Components_ButtonsContainer","Components_ChipsContainer","Boolean","location","hostname","match","rootDiv","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sJAAA,IAAAA,EAAA,CACAC,oBAAA,GACAC,uBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,mBAAA,GACAC,sBAAA,GACAC,oBAAA,GACAC,oBAAA,GACAC,mBAAA,GACAC,sBAAA,GACAC,oBAAA,GACAC,oBAAA,GACAC,mBAAA,GACAC,sBAAA,GACAC,oBAAA,GACAC,oBAAA,GACAC,mBAAA,GACAC,sBAAA,GACAC,oBAAA,GACAC,oBAAA,GACAC,mBAAA,GACAC,sBAAA,GACAC,oBAAA,GACAC,oBAAA,GACAC,mBAAA,GACAC,sBAAA,GACAC,oBAAA,GACAC,oBAAA,GACAC,mBAAA,GACAC,sBAAA,GACAC,oBAAA,GACAC,oBAAA,GACAC,mBAAA,GACAC,sBAAA,GACAC,oBAAA,GACAC,oBAAA,GACAC,qBAAA,GACAC,wBAAA,GACAC,sBAAA,GACAC,sBAAA,GACAC,sBAAA,GACAC,yBAAA,GACAC,uBAAA,GACAC,uBAAA,GACAC,sBAAA,GACAC,yBAAA,GACAC,uBAAA,GACAC,uBAAA,GACAC,uBAAA,GACAC,0BAAA,GACAC,wBAAA,GACAC,wBAAA,IAIA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAF,GACA,OAAAG,EAAAF,GAEA,SAAAC,EAAAF,GACA,IAAAC,EAAAvD,EAAAsD,GACA,KAAAC,EAAA,IACA,IAAAG,EAAA,IAAAC,MAAA,uBAAAL,EAAA,KAEA,MADAI,EAAAE,KAAA,mBACAF,EAEA,OAAAH,EAEAF,EAAAQ,KAAA,WACA,OAAAC,OAAAD,KAAA7D,IAEAqD,EAAAU,QAAAP,EACAQ,EAAAC,QAAAZ,EACAA,EAAAE,GAAA,oBC1EAS,EAAAC,QAAiBR,EAAAS,EAAuB,yDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,4DCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,0DCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,0DCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,wDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,2DCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,yDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,yDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,wDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,2DCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,yDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,yDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,wDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,2DCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,yDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,yDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,wDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,2DCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,yDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,yDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,wDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,2DCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,yDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,yDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,wDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,2DCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,yDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,yDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,wDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,2DCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,yDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,yDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,wDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,2DCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,yDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,yDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,0DCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,6DCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,2DCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,2DCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,2DCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,8DCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,4DCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,4DCAxCF,EAAAC,QAAi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","file":"static/js/main.f1c8df03.chunk.js","sourcesContent":["var map = {\n\t\"./10_of_clubs.svg\": 31,\n\t\"./10_of_diamonds.svg\": 32,\n\t\"./10_of_hearts.svg\": 33,\n\t\"./10_of_spades.svg\": 34,\n\t\"./2_of_clubs.svg\": 35,\n\t\"./2_of_diamonds.svg\": 36,\n\t\"./2_of_hearts.svg\": 37,\n\t\"./2_of_spades.svg\": 38,\n\t\"./3_of_clubs.svg\": 39,\n\t\"./3_of_diamonds.svg\": 40,\n\t\"./3_of_hearts.svg\": 41,\n\t\"./3_of_spades.svg\": 42,\n\t\"./4_of_clubs.svg\": 43,\n\t\"./4_of_diamonds.svg\": 44,\n\t\"./4_of_hearts.svg\": 45,\n\t\"./4_of_spades.svg\": 46,\n\t\"./5_of_clubs.svg\": 47,\n\t\"./5_of_diamonds.svg\": 48,\n\t\"./5_of_hearts.svg\": 49,\n\t\"./5_of_spades.svg\": 50,\n\t\"./6_of_clubs.svg\": 51,\n\t\"./6_of_diamonds.svg\": 52,\n\t\"./6_of_hearts.svg\": 53,\n\t\"./6_of_spades.svg\": 54,\n\t\"./7_of_clubs.svg\": 55,\n\t\"./7_of_diamonds.svg\": 56,\n\t\"./7_of_hearts.svg\": 57,\n\t\"./7_of_spades.svg\": 58,\n\t\"./8_of_clubs.svg\": 59,\n\t\"./8_of_diamonds.svg\": 60,\n\t\"./8_of_hearts.svg\": 61,\n\t\"./8_of_spades.svg\": 62,\n\t\"./9_of_clubs.svg\": 63,\n\t\"./9_of_diamonds.svg\": 64,\n\t\"./9_of_hearts.svg\": 65,\n\t\"./9_of_spades.svg\": 66,\n\t\"./ace_of_clubs.svg\": 67,\n\t\"./ace_of_diamonds.svg\": 68,\n\t\"./ace_of_hearts.svg\": 69,\n\t\"./ace_of_spades.svg\": 70,\n\t\"./jack_of_clubs.svg\": 71,\n\t\"./jack_of_diamonds.svg\": 72,\n\t\"./jack_of_hearts.svg\": 73,\n\t\"./jack_of_spades.svg\": 74,\n\t\"./king_of_clubs.svg\": 75,\n\t\"./king_of_diamonds.svg\": 76,\n\t\"./king_of_hearts.svg\": 77,\n\t\"./king_of_spades.svg\": 78,\n\t\"./queen_of_clubs.svg\": 79,\n\t\"./queen_of_diamonds.svg\": 80,\n\t\"./queen_of_hearts.svg\": 81,\n\t\"./queen_of_spades.svg\": 82\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 30;","module.exports = __webpack_public_path__ + \"static/media/10_of_clubs.669c20fc.svg\";","module.exports = __webpack_public_path__ + \"static/media/10_of_diamonds.dbb3850c.svg\";","module.exports = __webpack_public_path__ + \"static/media/10_of_hearts.c6339410.svg\";","module.exports = __webpack_public_path__ + \"static/media/10_of_spades.3963b09b.svg\";","module.exports = __webpack_public_path__ + \"static/media/2_of_clubs.94b4a5b0.svg\";","module.exports = __webpack_public_path__ + \"static/media/2_of_diamonds.eaef1133.svg\";","module.exports = __webpack_public_path__ + \"static/media/2_of_hearts.1b2188a0.svg\";","module.exports = __webpack_public_path__ + \"static/media/2_of_spades.b821dcd9.svg\";","module.exports = __webpack_public_path__ + \"static/media/3_of_clubs.4281c3d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/3_of_diamonds.b9d5e12f.svg\";","module.exports = __webpack_public_path__ + \"static/media/3_of_hearts.dfb7b9c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/3_of_spades.471f3e59.svg\";","module.exports = __webpack_public_path__ + \"static/media/4_of_clubs.037d8c23.svg\";","module.exports = __webpack_public_path__ + \"static/media/4_of_diamonds.72d20001.svg\";","module.exports = __webpack_public_path__ + \"static/media/4_of_hearts.6369d1c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/4_of_spades.e1ae3152.svg\";","module.exports = __webpack_public_path__ + \"static/media/5_of_clubs.12408f64.svg\";","module.exports = __webpack_public_path__ + \"static/media/5_of_diamonds.eda01110.svg\";","module.exports = __webpack_public_path__ + \"static/media/5_of_hearts.3a5059d0.svg\";","module.exports = __webpack_public_path__ + \"static/media/5_of_spades.8f300fb5.svg\";","module.exports = __webpack_public_path__ + \"static/media/6_of_clubs.3708c7e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/6_of_diamonds.a8aabd2d.svg\";","module.exports = __webpack_public_path__ + \"static/media/6_of_hearts.13bea5a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/6_of_spades.dd29ca5a.svg\";","module.exports = __webpack_public_path__ + \"static/media/7_of_clubs.768d16ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/7_of_diamonds.d00ed5bc.svg\";","module.exports = __webpack_public_path__ + \"static/media/7_of_hearts.51aa35bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/7_of_spades.00b5eed0.svg\";","module.exports = __webpack_public_path__ + \"static/media/8_of_clubs.55a0952d.svg\";","module.exports = __webpack_public_path__ + \"static/media/8_of_diamonds.5f81e325.svg\";","module.exports = __webpack_public_path__ + \"static/media/8_of_hearts.f6325833.svg\";","module.exports = __webpack_public_path__ + \"static/media/8_of_spades.4ff481d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/9_of_clubs.cf6317bc.svg\";","module.exports = __webpack_public_path__ + \"static/media/9_of_diamonds.a578d7b2.svg\";","module.exports = __webpack_public_path__ + \"static/media/9_of_hearts.71f25336.svg\";","module.exports = __webpack_public_path__ + \"static/media/9_of_spades.46304258.svg\";","module.exports = __webpack_public_path__ + \"static/media/ace_of_clubs.9ee19a01.svg\";","module.exports = __webpack_public_path__ + \"static/media/ace_of_diamonds.dd4d7167.svg\";","module.exports = __webpack_public_path__ + \"static/media/ace_of_hearts.47428313.svg\";","module.exports = __webpack_public_path__ + \"static/media/ace_of_spades.223cd5d8.svg\";","module.exports = __webpack_public_path__ + \"static/media/jack_of_clubs.56c4541c.svg\";","module.exports = __webpack_public_path__ + \"static/media/jack_of_diamonds.c38f31dc.svg\";","module.exports = __webpack_public_path__ + \"static/media/jack_of_hearts.02d4f21b.svg\";","module.exports = __webpack_public_path__ + \"static/media/jack_of_spades.a1f0114e.svg\";","module.exports = __webpack_public_path__ + \"static/media/king_of_clubs.ff456a80.svg\";","module.exports = __webpack_public_path__ + \"static/media/king_of_diamonds.658998b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/king_of_hearts.09112d05.svg\";","module.exports = __webpack_public_path__ + \"static/media/king_of_spades.fe66fe03.svg\";","module.exports = __webpack_public_path__ + \"static/media/queen_of_clubs.43122a93.svg\";","module.exports = __webpack_public_path__ + \"static/media/queen_of_diamonds.cdc326c0.svg\";","module.exports = __webpack_public_path__ + \"static/media/queen_of_hearts.c439a881.svg\";","module.exports = __webpack_public_path__ + \"static/media/queen_of_spades.58d77ea5.svg\";","var map = {\n\t\"./faceDownCard.jpg\": 84\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 83;","module.exports = __webpack_public_path__ + \"static/media/faceDownCard.dce1fb31.jpg\";","var map = {\n\t\"./1.png\": 86,\n\t\"./10.png\": 87,\n\t\"./100.png\": 88,\n\t\"./1000.png\": 89,\n\t\"./10000.png\": 90,\n\t\"./5.png\": 91,\n\t\"./50.png\": 92,\n\t\"./500.png\": 93\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 85;","module.exports = __webpack_public_path__ + \"static/media/1.4015c6b6.png\";","module.exports = __webpack_public_path__ + \"static/media/10.d0b4a2ce.png\";","module.exports = __webpack_public_path__ + \"static/media/100.b655a584.png\";","module.exports = __webpack_public_path__ + \"static/media/1000.36651cfc.png\";","module.exports = __webpack_public_path__ + \"static/media/10000.32f75b37.png\";","module.exports = __webpack_public_path__ + \"static/media/5.39fd5029.png\";","module.exports = __webpack_public_path__ + \"static/media/50.6a5b0c1d.png\";","module.exports = __webpack_public_path__ + \"static/media/500.2c96f6c6.png\";","// dinamicaly create all 52 cards\r\nconst cards = [];  // array that will hold the cards\r\nconst suits = [\"S\", \"H\", \"C\", \"D\"];  // spades, hearts, clubs, diamonds\r\nconst extension = '.svg';\r\n\r\n\r\nclass cardObject {\r\n    constructor(value, symbol){\r\n        this.value = value;\r\n        this.symbol = symbol\r\n    }\r\n}\r\n\r\nfor (let i = 1; i <= 14; i++){\r\n    switch(i){\r\n        case 1:{\r\n            const value = 1;\r\n            for (let j = 0; j < 4; j++){\r\n                const symbol = 'ace' + suits[j] + extension;\r\n\r\n                const card = new cardObject(value, symbol);\r\n                cards.push(card);\r\n            }\r\n            break;\r\n        }\r\n        case 12:{\r\n            const value = 10;\r\n            for (let j = 0; j < 4; j++){\r\n                const symbol = 'jack' + suits[j] + extension;\r\n\r\n                const card = new cardObject(value, symbol);\r\n                cards.push(card);\r\n            }\r\n            break;\r\n        }\r\n        case 13:{\r\n            const value = 10;\r\n            for (let j = 0; j < 4; j++){\r\n                const symbol = 'queen' + suits[j] + extension;\r\n\r\n                const card = new cardObject(value, symbol);\r\n                cards.push(card);\r\n            }\r\n            break;            \r\n        }\r\n        case 14:{\r\n            const value = 10;\r\n            for (let j = 0; j < 4; j++){\r\n                const symbol = 'king' + suits[j] + extension;\r\n\r\n                const card = new cardObject(value, symbol);\r\n                cards.push(card);\r\n            }\r\n            break;\r\n        }\r\n        case 11:{\r\n            break;\r\n        }\r\n        default:\r\n            const value = i;\r\n            for (let j = 0; j < 4; j++){\r\n                const symbol = i + suits[j] + extension;\r\n\r\n                const card = new cardObject(value, symbol);\r\n                cards.push(card);\r\n            }\r\n            break;\r\n    }\r\n}\r\n\r\n\r\nfunction shuffle(array) { // source : https://bost.ocks.org/mike/shuffle/\r\n    var m = array.length, t, i;\r\n    var arrayCopy = array.slice();\r\n    // While there remain elements to shuffle…\r\n    while (m) {\r\n  \r\n      // Pick a remaining element…\r\n      i = Math.floor(Math.random() * m--);\r\n  \r\n      // And swap it with the current element.\r\n      t = arrayCopy[m];\r\n      arrayCopy[m] = arrayCopy[i];\r\n      arrayCopy[i] = t;\r\n    }\r\n  \r\n    return arrayCopy;\r\n}\r\n\r\nexport {\r\n    cards,\r\n    shuffle\r\n}","import React from 'react';\r\n\r\nconst GameRules = () =>{\r\n    return(\r\n        <div id=\"tooltip\">\r\n          <i className=\"fas fa-info-circle info\"></i>\r\n          <div id = 'tooltipText'>\r\n              <p>Dealer must draw to 16 and stand on all 17's.</p>\r\n              <p>Blackjack pays 2 to 1.</p>\r\n              <p>There is a Charlie Win option: Player wins if he draws five cards without busting, irrespective of the dealer's hand.</p>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameRules;","const calculateScore = (cardsToEvaluate) => {  // score of cards in a hand\r\n    const calculations = [];\r\n    let values = cardsToEvaluate.map(elem => elem.value);\r\n    calculations.push(values.reduce((total, sum) => total + sum));\r\n\r\n    if(values.includes(1)){ \r\n        // ace card can have value 1 and 11. turn aces to 11 and calculate again\r\n        for (let i = 0 ; i < values.length; i++){\r\n            if(values[i] === 1){\r\n                values[i] = 11;\r\n\r\n                calculations.push(values.reduce((total, sum) => total + sum));\r\n            }\r\n        }\r\n    }\r\n    let filteredCalculations = calculations.filter(elem => elem <= 21);\r\n    \r\n    // filteredCalculations can be returned as an array or an integer depending on whether there is an Ace (1 & 11) in a hand\r\n    if(filteredCalculations.length > 0){\r\n        if(filteredCalculations.length > 1){\r\n            return filteredCalculations;\r\n        }else{\r\n            return Math.max(...filteredCalculations)\r\n        }\r\n    }else{ // the case when score is over 21\r\n        return Math.min(...calculations)\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    calculateScore\r\n}\r\n","import { calculateScore } from '../Constants/calculateScore.js';\r\n\r\nconst importAll = (req) => {\r\n    // import all card images\r\n    let images = {}\r\n    \r\n    req.keys().forEach(elem => {\r\n    // corecting filename for each file, adapting it for later use\r\n      let corectedElem = elem.replace('./','');\r\n      corectedElem = corectedElem.replace('_of_', '');\r\n      corectedElem = corectedElem.replace('spades', 'S');\r\n      corectedElem = corectedElem.replace('clubs', 'C');\r\n      corectedElem = corectedElem.replace('diamonds', 'D');\r\n      corectedElem = corectedElem.replace('hearts', 'H');\r\n  \r\n     images[corectedElem] = req(elem);\r\n    \r\n    });\r\n    return images;\r\n}\r\n  \r\nconst images = importAll(require.context('../Cards/SVG-cards-1.3', false, /\\.svg$/));\r\n\r\nconst updateObject = (oldObject, newValues) => {  // source Redux documentation\r\n    // Encapsulate the idea of passing a new object as the first parameter\r\n    // to Object.assign to ensure we correctly copy data instead of mutating\r\n    return Object.assign({}, oldObject, newValues)\r\n}\r\n\r\nconst Hit = (deck, playerCards, currentPlayer) => {  \r\n    // draws a card from the deck\r\n    let playerScore, dealerScore;\r\n\r\n    deck = deck.slice();  // make a copy\r\n    playerCards = playerCards.slice(); \r\n\r\n    let hitCard = {src: images[deck[0].symbol], card: deck[0]};  // first card from deck\r\n\r\n    deck.shift();\r\n    playerCards.push(hitCard);\r\n\r\n    if(currentPlayer === 'player'){ // drawing for player\r\n        const cardsToEvaluate = playerCards.map(elem => {return elem.card})\r\n        playerScore = calculateScore(cardsToEvaluate);\r\n\r\n        const newValues = {\r\n            deck,\r\n            playerCards,\r\n            playerScore,\r\n            firstMove: false\r\n        }\r\n\r\n        return newValues;\r\n    }else if(currentPlayer === 'dealer'){  // drawing for dealer\r\n        const cardsToEvaluate = playerCards.map(elem => {return elem.card})\r\n        dealerScore = calculateScore(cardsToEvaluate);\r\n        let dealerCards = playerCards;\r\n\r\n        const newValues = {\r\n            deck,\r\n            dealerCards,\r\n            dealerScore\r\n        }\r\n\r\n        return newValues;\r\n    }\r\n}\r\n\r\nconst Double = (currentMoney, pot, deck, playerCards) => { // double down\r\n    let newCurrentMoneyVal = currentMoney - pot;\r\n    let newPotVal = pot + pot;\r\n\r\n    let newValues = Hit(deck, playerCards, 'player');\r\n    newValues = Object.assign({}, newValues, {\r\n        currentMoney: newCurrentMoneyVal,\r\n        pot: newPotVal,\r\n        playerTurn: false,\r\n        firstMove: false\r\n    });\r\n\r\n    return newValues;\r\n}\r\n\r\n\r\nconst blackjack = (score, cards) => {\r\n    // returns boolean value\r\n    return  score === 21 && cards.length === 2;\r\n}\r\n\r\nconst compareScores = (playerScore, dealerScore, playerCards, dealerCards) => {\r\n    // score value can be an array or an integer, depending on whether there is an Ace in a hand (Ace = 1 & 11)\r\n    // choose the best possible score for the player \r\n    playerScore = playerScore.length === 2? playerScore[1] : playerScore;\r\n    dealerScore = dealerScore.length === 2? dealerScore[1] : dealerScore;\r\n    \r\n    if(playerCards.length === 5 && playerScore <= 21 ){\r\n        // if player has drawn five cards without busting it is a Charlie win, irrespective of the dealer's hand\r\n        const text = 'Charlie Win!!!';\r\n        return {\r\n            result: 'win',\r\n            text\r\n        }\r\n    }\r\n    else if(blackjack(dealerScore, dealerCards) && blackjack(playerScore, playerCards)){\r\n        const text = 'Both players had Blackjack. Push.';\r\n        return {\r\n            result:'push',\r\n            text\r\n        };\r\n    }else if(playerScore === 21 && dealerScore === 21){\r\n        if(blackjack(playerScore, playerCards)){\r\n            const text = 'Player won because of blackjack: '+ playerScore + ' = ' + dealerScore + '.';\r\n            return {\r\n                result: 'win',\r\n                text\r\n            };\r\n        }else if(blackjack(dealerScore, dealerCards)){\r\n            const text = 'Dealer won because of blackjack: ' + playerScore + ' = ' + dealerScore + '.';\r\n            return {\r\n                result:'lose',\r\n                text\r\n            };\r\n        }else{\r\n            const text = 'Neither player had blackjack, it is a draw. Push.'\r\n            return {\r\n                result: 'push',\r\n                text\r\n            };\r\n        }\r\n    }else if(blackjack(dealerScore, dealerCards)){\r\n        const text = 'Dealer Blackjack, player lost.';\r\n        return {\r\n            result:'lose',\r\n            text\r\n        };\r\n    }else if(blackjack(playerScore, playerCards)){\r\n        const text = 'Player got Blackjack!!!';\r\n        return {\r\n            result: 'blackjack',\r\n            text\r\n        }\r\n    }else if(playerScore > 21){\r\n        const text = 'Player busted: ' + playerScore + '.';\r\n        return {\r\n            result:'lose',\r\n            text\r\n        }\r\n    }else if(dealerScore > 21){\r\n        const text = 'Dealer busted: ' + dealerScore + '. Player wins.'\r\n        return {\r\n            result :'win',\r\n            text\r\n        }\r\n    }else if(playerScore > dealerScore){\r\n        const text = 'Player won, better score: ' + playerScore + ' > ' + dealerScore + '.';\r\n        return {\r\n            result: 'win',\r\n            text\r\n        }\r\n    }else if(dealerScore > playerScore){\r\n        const text = 'Dealer won, better score: ' + dealerScore + ' > ' + playerScore + '.';\r\n        return { \r\n            result:'lose',\r\n            text\r\n        }\r\n    }else if(dealerScore === playerScore){\r\n        const text = 'Equal scores: ' + playerScore + ' = ' + dealerScore + '. Push.'\r\n        return {\r\n            result:'push',\r\n            text\r\n        }\r\n    }else{\r\n        console.log('error')\r\n        return '---'\r\n    }\r\n}\r\n\r\nexport{\r\n    updateObject,\r\n    Hit,\r\n    Double,\r\n    compareScores\r\n}","import React from 'react';\r\n\r\nconst Score = ({score, playerTurn}) => {\r\n    let className = 'score ';\r\n    let containerClass ;\r\n    let scoreArray =[];\r\n\r\n    if(typeof(score) === 'string'){\r\n        scoreArray = score.split('/');\r\n        scoreArray = scoreArray.map(elem => parseInt(elem));\r\n    }\r\n\r\n    if(playerTurn === true){\r\n        className += 'hidden '\r\n    }\r\n    if(scoreArray[1] < 21 || score < 21){\r\n        className += 'u21Score ';\r\n    }else if(scoreArray[1] === 21 || score === 21){\r\n        className += 'e21Score ';\r\n        containerClass = 'e21ScoreContainer'\r\n    }else{\r\n        className += 'o21Score ';\r\n    }\r\n\r\n    return(\r\n        <div className = {containerClass}>\r\n            <div className = {className}>{score}</div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Score;","import React from 'react';\r\nimport { compareScores } from '../../Reducers/herlperFunctions.js';\r\nimport Score from './Score.js';\r\n\r\nconst importImage = (req) => { // import faceDown card image\r\n    let image = {}\r\n    \r\n    req.keys().forEach(elem => {\r\n        // correct the string for easier manipulation\r\n        let correctedElem = elem.replace('./','');\r\n        correctedElem = correctedElem.replace('.jpg','');\r\n        \r\n        image[correctedElem] = req(elem);\r\n    \r\n    });\r\n    return image;\r\n}\r\nconst faceDownCard = importImage(require.context('../../Cards/FaceDown', false, /\\.jpg$/));\r\n\r\n\r\nconst Card = ({imageSource, hidden}) => {\r\n    let className = 'cardImage ';\r\n    let backOfTheCard;\r\n    \r\n    if(hidden === true){\r\n        className += 'faceDown ';  // hide dealer's second card\r\n        backOfTheCard = <img src = {faceDownCard.faceDownCard} alt='back of the card' className = 'cardImage '/>\r\n        \r\n    }else{\r\n        backOfTheCard = <img src = {faceDownCard.faceDownCard} alt='back of the card' className = 'cardImage backOfTheCardRotate'/>\r\n    }\r\n    return(\r\n        <div className = 'cardDiv '>\r\n            <div className = 'cardImageContainer'>\r\n                <img src={imageSource} alt='card' className = {className} draggable ='false'/>\r\n                {backOfTheCard}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nclass AllCardsContainer extends React.Component{\r\n    // this component renders both player's and dealer's cards. When the player finishes he's turn, the component plays dealer's moves in componentDidUpdate, dispatching actions with timeout for prettier UI.\r\n    constructor(props) {\r\n        super(props);\r\n        this.timeouts = [];\r\n        this.componentCleanup = this.componentCleanup.bind(this);\r\n    }\r\n    componentDidUpdate(){\r\n        let {player, cardsAreDealt, playerTurn, dealerMove, dealerCards, dealerScore, playerCards, playerScore, endGame} = this.props;\r\n        let comparisonResult = '';\r\n\r\n        if(cardsAreDealt){\r\n            if(player === 'dealer' && !playerTurn){\r\n                // playing the dealer's moves \r\n                // dealer must draw to 16 and stand on all 17's\r\n\r\n                if(playerScore > 21){\r\n                    // player busted, dealer doesn't draw cards\r\n                    comparisonResult = compareScores(playerScore, dealerScore, playerCards, dealerCards);\r\n                    this.timeouts[0] = setTimeout(() => {\r\n                        endGame(comparisonResult);\r\n                    }, 1800);\r\n\r\n                }else if(playerScore[1] === 21 && playerCards.length === 2){\r\n                    // player got blackjack on first two dealt cards , dealer doesn't draw cards, just compare scores\r\n                    comparisonResult = compareScores(playerScore, dealerScore, playerCards, dealerCards);\r\n                    this.timeouts[1] = setTimeout(() => {\r\n                        endGame(comparisonResult);\r\n                    }, 2200);\r\n\r\n                }else if(compareScores(playerScore, dealerScore, playerCards, dealerCards).text === 'Charlie Win!!!'){\r\n                    // player has 5 cards without busting, it is a Charlie win, irrespective of the dealer's hand\r\n                    comparisonResult = compareScores(playerScore, dealerScore, playerCards, dealerCards);\r\n                    this.timeouts[2] = setTimeout(() => {\r\n                        endGame(comparisonResult);\r\n                    }, 2200);\r\n\r\n                }\r\n                else if(dealerCards.length === 2 && dealerScore[1] === 21){ \r\n                    // dealer has blackjack\r\n                    comparisonResult = compareScores(playerScore, dealerScore, playerCards, dealerCards);\r\n                    this.timeouts[0] = setTimeout(() => {\r\n                        endGame(comparisonResult);\r\n                    }, 1800);\r\n\r\n                }else if(dealerScore[1] <= 16 || dealerScore <= 16){\r\n                    // draw one card for the dealer\r\n                    this.timeouts[1] = setTimeout(() => {\r\n                        dealerMove();\r\n                    }, 1200);\r\n                }else{\r\n                    // compare scores and end game\r\n                    comparisonResult = compareScores(playerScore, dealerScore, playerCards, dealerCards);\r\n                    this.timeouts[2] = setTimeout(() => {\r\n                        endGame(comparisonResult);\r\n                    }, 2000);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // cleaning up the component on unmount\r\n    componentDidMount(){\r\n        window.addEventListener('beforeunload', this.componentCleanup)\r\n    }\r\n    componentCleanup(){\r\n        this.timeouts.map(elem => clearInterval(elem)); \r\n    }\r\n    componentWillUnmount(){\r\n        this.componentCleanup();\r\n        window.removeEventListener('beforeunload', this.componentCleanup); \r\n    }\r\n    \r\n    render(){\r\n        let {cardsAreDealt, src, playerTurn, score } = this.props;\r\n        let cards;\r\n        if(cardsAreDealt){\r\n            cards = src.map((elem, ind) => {\r\n                if(playerTurn === true && ind === 1){\r\n                    return <Card imageSource = {elem.src} key = {ind} hidden = {true}/>\r\n                }else{\r\n                    return <Card imageSource = {elem.src} key = {ind} />\r\n                }\r\n            });\r\n            if(score.length > 1){\r\n                score = score[0] + '/' + score[1];\r\n            }\r\n        }\r\n        \r\n        return(\r\n            <div className = 'cardsAndScoreContainer'>\r\n                <div className = 'cardsOnTable'>{cards}</div>\r\n               { score !== 0  && <Score score={score} playerTurn = {playerTurn}/>}\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport default AllCardsContainer;","import AllCardsContainer from './Presentational/Cards.js';\r\nimport { DealerMove } from '../Actions/DealerMove.js';\r\nimport { EndGame } from '../Actions/EndGame.js';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    src: state.dealerCards,\r\n    cardsAreDealt: state.cardsAreDealt,\r\n    player: 'dealer',\r\n    firstMove: state.firstMove,\r\n    playerTurn: state.playerTurn,\r\n    score: state.dealerScore,\r\n    dealerCards: state.dealerCards,\r\n    playerCards: state.playerCards,\r\n    dealerScore: state.dealerScore,\r\n    playerScore: state.playerScore\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dealerMove: (move) => dispatch(DealerMove(move)),\r\n    endGame: (comparisonResult) => dispatch(EndGame(comparisonResult))\r\n})\r\n\r\n\r\nconst DealerCards = connect(mapStateToProps, mapDispatchToProps)(AllCardsContainer);\r\n\r\nexport default DealerCards;","import { DEALERMOVE } from '../Constants/ActionTypes.js';\r\n\r\nexport const DealerMove = () => ({\r\n    type: DEALERMOVE\r\n})","const PLACEBET = 'PLACEBET';\r\nconst CANCELBET = 'CANCELBET'\r\nconst DEAL = 'DEAL';\r\nconst HIT = 'HIT';\r\nconst DOUBLE = 'DOUBLE';\r\nconst STAND = 'STAND';\r\nconst DEALERMOVE = 'DEALERMOVE';\r\nconst ENDGAME = 'ENDGAME';\r\n\r\nexport{\r\n    PLACEBET,\r\n    CANCELBET,\r\n    DEAL,\r\n    HIT,\r\n    DOUBLE,\r\n    STAND,\r\n    DEALERMOVE,\r\n    ENDGAME\r\n}","import { ENDGAME } from  '../Constants/ActionTypes.js';\r\n\r\nexport const EndGame = (comparisonResult) =>( {\r\n    type : ENDGAME,\r\n    comparisonResult\r\n})\r\n\r\n/*  comparisonResult will be an object with two properites:\r\n    result: blackjack, win, lose or push,\r\n    text: for example player had blackjack, or player busted etc...\r\n*/","import AllCardsContainer from './Presentational/Cards.js';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToProps = state => ({\r\n    src: state.playerCards,\r\n    cardsAreDealt: state.cardsAreDealt,\r\n    player: 'player',\r\n    score: state.playerScore\r\n});\r\n\r\n\r\nconst PlayerCards = connect(mapStateToProps, null) (AllCardsContainer);\r\n\r\nexport default PlayerCards;","import React from 'react';\r\n\r\nconst Pot = ({pot, cancelBet, cardsAreDealt}) => {\r\n    return(\r\n        <div className ='pot'>\r\n            <div>{pot > 0 && pot}$</div>\r\n            \r\n            {(pot > 0 && !cardsAreDealt) && <button onClick = {cancelBet} className = 'cancelBet' title = 'Cancel bet'>x</button>} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pot;","import React from 'react';\r\n\r\nconst EndGameResult = ({endGameText}) => {\r\n    \r\n    return(\r\n        <div className = 'endGameResult'>\r\n        {endGameText !== undefined  && <div className = 'endGameText'>{endGameText}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EndGameResult;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CancelBet } from '../Actions/CancelBet.js';\r\nimport DealerCards from './DealerCards.js';\r\nimport PlayerCards from './PlayerCards.js';\r\nimport Pot from './Presentational/Pot.js';\r\nimport EndGameResult from './Presentational/EndGameResult.js';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  pot: state.pot,\r\n  cardsAreDealt: state.cardsAreDealt,\r\n  endGameText: state.endGameText\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  cancelBet : () => dispatch(CancelBet())\r\n})\r\n\r\n\r\nconst Table = ({pot, cancelBet, cardsAreDealt, endGameText}) => {\r\n    return(\r\n        <div className = 'table'>\r\n            <DealerCards/>\r\n            { pot > 0 && <Pot pot = {pot} cancelBet = {cancelBet} cardsAreDealt = {cardsAreDealt}/>}\r\n            {endGameText && <EndGameResult endGameText = {endGameText}/>}\r\n            <PlayerCards/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);","import { CANCELBET } from '../Constants/ActionTypes.js';\r\n\r\nexport const CancelBet = () => ({\r\n    type: CANCELBET\r\n});","import React from 'react';\r\n\r\nconst Button = ({buttonText, handleClick, styleClass}) => {\r\n    let className = 'btn '+ styleClass;\r\n\r\n    return(\r\n        <button className = {className} onClick = {handleClick}>{buttonText}</button>\r\n    )\r\n}   \r\n\r\nexport default Button;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Button from './Presentational/Button.js';\r\nimport { Deal } from '../Actions/Deal.js';\r\nimport { Hit } from '../Actions/Hit.js';\r\nimport { Stand } from '../Actions/Stand.js';\r\nimport { Double } from '../Actions/Double.js';\r\n\r\nconst mapStateToProps = (state) => ({\r\n    cardsAreDealt: state.cardsAreDealt,\r\n    firstMove: state.firstMove,\r\n    pot : state.pot,\r\n    playerTurn : state.playerTurn\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    dealCards: () => dispatch(Deal()),\r\n    hit: () => dispatch(Hit()),\r\n    stand: () => dispatch(Stand()),\r\n    double: () => dispatch(Double())\r\n})\r\n\r\nconst ButtonsContainer = ({cardsAreDealt, firstMove, playerTurn, dealCards, pot, hit, stand, double}) => {\r\n  let buttons;\r\n  if(cardsAreDealt && playerTurn){\r\n    if(firstMove){\r\n      buttons = [\r\n        <Button key='hit' buttonText = 'Hit' handleClick = {hit} styleClass = 'btnHit'/>,  \r\n        <Button key = 'double' buttonText = 'Double' handleClick = {double} styleClass = 'btnDouble'/>, // can only be played on the first move\r\n        <Button key = 'stand' buttonText = 'Stand' handleClick = {stand} styleClass = 'btnStand'/>\r\n      ]\r\n    }else if(!firstMove){\r\n      buttons = [\r\n        <Button key='hit' buttonText = 'Hit' handleClick = {hit} styleClass = 'btnHit'/>,\r\n        <Button key = 'stand' buttonText = 'Stand' handleClick = {stand} styleClass = 'btnStand'/>\r\n      ]\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className = 'buttonsContainer'>\r\n      {!cardsAreDealt && pot>0 && <Button buttonText = 'Deal' handleClick = {dealCards} styleClass = 'btnDeal'/>}\r\n      {buttons}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonsContainer);\r\n","import { DEAL } from '../Constants/ActionTypes.js';\r\n\r\nexport const Deal = () => ({\r\n    type: DEAL\r\n})","import { HIT } from '../Constants/ActionTypes.js';\r\n\r\nexport const Hit = () => ({\r\n    type: HIT\r\n})","import { STAND } from '../Constants/ActionTypes.js';\r\n\r\nexport const Stand = () => ({\r\n    type: STAND\r\n})","import { DOUBLE } from '../Constants/ActionTypes.js';\r\n\r\nexport const Double = () => ({\r\n    type: DOUBLE\r\n})","import React from 'react';\r\nconst importAll = (req) => {\r\n    // import all chips images\r\n    let images = {}\r\n    \r\n    req.keys().forEach(elem => {\r\n        // correct the string for easier manipulation\r\n        let correctedElem = elem.replace('./','');\r\n        correctedElem = correctedElem.replace('.png','');\r\n        \r\n        images[correctedElem] = req(elem);\r\n    \r\n    });\r\n    return images;\r\n}\r\n  \r\nconst chipsImages = importAll(require.context('../../Cards/Chips', false, /\\.png$/));\r\n\r\nconst calculateAvailableChips = (currentMoney) =>{\r\n    const chips = [1, 5, 10, 50, 100, 500, 1000, 10000]\r\n    let possibleChips = chips.filter(elem => currentMoney>= elem);\r\n\r\n    if(possibleChips.length > 6){\r\n        return possibleChips.slice(-6);\r\n    }\r\n\r\n    return possibleChips;\r\n}\r\n\r\nconst Chip = ({value, onClick}) => {\r\n    let chipImage = chipsImages[value];\r\n\r\n    return (\r\n        <div className ='chip'  value = {value} onClick = {onClick}>\r\n            <img alt ='chipimg' value = {value} className = 'chipImage' src ={chipImage} />\r\n            <span value = {value}>{value}$</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst AllPlayersChips = ({cardsAreDealt, currentMoney, placeBet}) => {\r\n    let possibleChips = calculateAvailableChips(currentMoney);\r\n    \r\n    let chips = possibleChips.map((elem, idx) => {\r\n        return <Chip onClick = {placeBet} key={idx} value = {elem}/>\r\n    })\r\n\r\n    return(\r\n        <div>\r\n            {!cardsAreDealt && \r\n            <div className = 'allPlayersChips'>\r\n                {chips}\r\n            </div>\r\n            }\r\n            <div className = 'currentMoney'>Your current cash: {currentMoney}$</div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default AllPlayersChips;","import {connect} from 'react-redux';\r\nimport AllPlayersChips from './Presentational/Chips.js';\r\nimport { PlaceBet } from '../Actions/PlaceBet.js';\r\n\r\nconst mapStateToProps = state => ({\r\n    currentMoney: state.currentMoney,\r\n    cardsAreDealt: state.cardsAreDealt\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    placeBet : (e) => {\r\n        const cash = parseInt(e.target.getAttribute('value'));\r\n        dispatch(PlaceBet(cash));\r\n    }\r\n})\r\n\r\nconst ChipsContainer = connect(mapStateToProps, mapDispatchToProps)(AllPlayersChips);\r\n\r\nexport default ChipsContainer;","import { PLACEBET } from '../Constants/ActionTypes.js';\r\n\r\nexport const PlaceBet = (cash) => ({\r\n    type: PLACEBET,\r\n    cash\r\n})","const emptyTheTable = () => {\r\n    // clears the table and resets the state, so that the next hand can be played\r\n    return{\r\n        playerCards: [],\r\n        dealerCards: [],\r\n        playerScore: 0,\r\n        dealerScore: 0,\r\n        cardsAreDealt: false,\r\n        playerTurn: true,\r\n        firstMove: true\r\n    }\r\n}\r\n\r\nconst doublePot = (pot, currentMoney) => {\r\n    // winning with blackjack   \r\n    const doubled = pot *2;  // blackjack pays 2 to 1\r\n    const newCurrentMoneyValue = currentMoney + pot + doubled;\r\n\r\n    return {\r\n        pot: 0,\r\n        currentMoney: newCurrentMoneyValue\r\n    }\r\n\r\n}\r\n\r\nconst winBet = (pot, currentMoney) => {\r\n    // winning regular bet\r\n    const newCurrentMoneyValue = currentMoney + pot*2;\r\n\r\n    return {\r\n        pot: 0,\r\n        currentMoney: newCurrentMoneyValue\r\n    }\r\n}\r\n\r\nconst push = (pot, currentMoney) => {\r\n    // draw case\r\n    const newCurrentMoneyValue = currentMoney + pot;\r\n\r\n    return {\r\n        pot: 0,\r\n        currentMoney: newCurrentMoneyValue\r\n    }\r\n\r\n}\r\n\r\nexport{\r\n    emptyTheTable,\r\n    doublePot,\r\n    winBet,\r\n    push\r\n}","import { cards, shuffle } from '../Constants/cardObjects.js';\r\nimport { DEAL, PLACEBET, CANCELBET, HIT, STAND, DOUBLE, DEALERMOVE, ENDGAME} from '../Constants/ActionTypes.js';\r\nimport { updateObject, Hit, Double } from './herlperFunctions.js';\r\nimport { emptyTheTable, doublePot, winBet, push } from './endgameFunctions.js';\r\n\r\nconst shuffledDeck = shuffle(cards);\r\n\r\nconst initialState = {\r\n    deck: shuffledDeck,\r\n    playerCards: [],\r\n    dealerCards: [],\r\n    currentMoney: 3000,\r\n    pot: 0,\r\n    playerScore: 0,\r\n    dealerScore: 0,\r\n    cardsAreDealt: false,\r\n    playerTurn: true,\r\n    firstMove: true,\r\n    charlieWin: false,\r\n    endGameText: undefined\r\n}\r\n\r\n\r\nconst RootReducer = (state = initialState, action)=>{\r\n    switch(action.type){\r\n        case PLACEBET: {\r\n            let {pot, currentMoney} = state;\r\n\r\n            if(action.cash <= currentMoney){\r\n                pot += action.cash;\r\n                currentMoney -= action.cash;\r\n\r\n                let endGameText = undefined;\r\n                return Object.assign({}, state, {pot, currentMoney, endGameText})\r\n            }\r\n            return state\r\n        }\r\n        case CANCELBET: {\r\n            let {pot, currentMoney} = state;\r\n            currentMoney += pot;\r\n            pot = 0;\r\n\r\n            return Object.assign({}, state, {pot, currentMoney})\r\n        }\r\n        case DEAL: {\r\n            let deck = state.deck.slice();\r\n\r\n            if(deck.length < 4){\r\n                deck = shuffle(shuffledDeck); // reshufle cards when the deck is close to empty\r\n            }\r\n            let newValues = {\r\n                deck: deck,\r\n                playerCards: [],\r\n                dealerCards: []\r\n            };\r\n\r\n            // Hit two cards for dealer an two cards for player\r\n            for (let i = 0 ; i < 4 ; i++){\r\n                if(i % 2 === 0){\r\n                   newValues = Object.assign({}, newValues, Hit(newValues.deck, newValues.playerCards, 'player'));\r\n                }else{\r\n                    newValues = Object.assign({}, newValues, Hit(newValues.deck, newValues.dealerCards, 'dealer'));\r\n                }\r\n            }\r\n            \r\n            newValues.cardsAreDealt = true;\r\n            newValues.firstMove = true;\r\n\r\n            // if player got 21 (blackjack) on the deal, Stand is automatically played\r\n            if(newValues.playerScore[1] === 21){\r\n                newValues = Object.assign({}, newValues, {\r\n                    playerTurn: false,\r\n                    firstMove: false\r\n                });\r\n            }\r\n            \r\n            return updateObject(state, newValues);\r\n        }\r\n        case HIT: {\r\n            let deck = state.deck.slice();\r\n            let playerCards = state.playerCards.slice();\r\n            if(deck.length < 2){\r\n                deck = shuffle(shuffledDeck); // reshufle cards when the deck is close to empty\r\n            }\r\n            let newValues = Hit(deck, playerCards, 'player');  // draw new card from the deck\r\n\r\n            // if player got 21, switch to dealer turn\r\n            if(newValues.playerScore[1] === 21 || newValues.playerScore === 21){\r\n                newValues = Object.assign({}, newValues, {\r\n                    playerTurn: false,\r\n                    firstMove: false\r\n                });\r\n            }\r\n            // if player didn't bust and has drawn 5 cards, it is a 'Charlie win'\r\n            else if((newValues.playerScore[1] <= 21 || newValues.playerScore <= 21) && newValues.playerCards.length === 5){\r\n                newValues = Object.assign({}, newValues, {\r\n                    playerTurn: false,\r\n                    firstMove: false\r\n                });\r\n            }\r\n            // if player got more than 21 , stop drawing cards and switch to dealer for endgame\r\n            else if(newValues.playerScore > 21){\r\n                newValues = Object.assign({}, newValues, {\r\n                    playerTurn: false,\r\n                    firstMove: false\r\n                });\r\n            }\r\n\r\n            return updateObject(state, newValues);\r\n        }\r\n        case DOUBLE: {\r\n            let {pot, currentMoney} = state;\r\n            let deck = state.deck.slice();\r\n            let playerCards = state.playerCards.slice();\r\n\r\n            if(pot <= currentMoney){\r\n                if(deck.length < 2){\r\n                    deck = shuffle(shuffledDeck); // reshufle cards when the deck is close to empty\r\n                }\r\n                \r\n                let newValues = Double(currentMoney, pot, deck, playerCards);\r\n                \r\n                return updateObject(state, newValues);\r\n                \r\n            }else{\r\n                alert('Not enough cash to double!');\r\n                return state;\r\n            }           \r\n        }\r\n        case STAND: {\r\n            return Object.assign({}, state, {\r\n                playerTurn: false,\r\n                firstMove: false\r\n            })\r\n        }\r\n        case DEALERMOVE: {\r\n            let deck = state.deck.slice();\r\n            let dealerCards = state.dealerCards.slice();\r\n\r\n            if(deck.length < 2){\r\n                deck = shuffle(shuffledDeck); // reshufle cards when the deck is close to empty\r\n            }\r\n\r\n            let newValues = Hit(deck, dealerCards, 'dealer');\r\n            \r\n            return updateObject(state, newValues);\r\n            \r\n        }\r\n        case ENDGAME: {\r\n            // action.comparisonResult.result can be: blackjack | win | push | lose  \r\n            \r\n            const {pot, currentMoney} = state;\r\n\r\n            switch (action.comparisonResult.result){\r\n                case \"blackjack\": {\r\n                    let newValues = doublePot(pot, currentMoney);\r\n                    newValues = Object.assign({}, newValues, emptyTheTable(), {\r\n                        endGameText: action.comparisonResult.text\r\n                    })\r\n                    return updateObject(state, newValues)\r\n                }\r\n                case \"win\": {\r\n                    let newValues = winBet(pot, currentMoney);\r\n                    newValues = Object.assign({}, newValues, emptyTheTable(), {\r\n                        endGameText: action.comparisonResult.text\r\n                    });\r\n                    return updateObject(state, newValues)\r\n                }\r\n                case \"lose\": {\r\n                    let newValues = {\r\n                        pot: 0\r\n                    }\r\n                    newValues = Object.assign({}, newValues, emptyTheTable(), {\r\n                        endGameText: action.comparisonResult.text\r\n                    });\r\n                    return updateObject(state, newValues)\r\n                }\r\n                case \"push\": {\r\n                    let newValues = push(pot, currentMoney);\r\n                    newValues = Object.assign({}, newValues, emptyTheTable(), {\r\n                        endGameText: action.comparisonResult.text\r\n                    });\r\n                    return updateObject(state, newValues);\r\n                }\r\n                default: {\r\n                    return state;\r\n                }\r\n            }\r\n        \r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default RootReducer;","import React, { Component } from 'react';\nimport GameRules from './Components/Presentational/GameRules.js';\nimport Table from './Components/Table.js';\nimport ButtonsContainer from './Components/ButtonsContainer.js';\nimport ChipsContainer from './Components/ChipsContainer.js';\nimport RootReducer from './Reducers/RootReducer.js';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nlet store = createStore(RootReducer);\n\n\nclass App extends Component{  \n\n  componentDidMount(){\n    const tooltip = document.getElementById('tooltip');\n    \n    const tooltipText = document.getElementById('tooltipText');\n    tooltipText.style.visibility ='hidden';\n\n    tooltip.addEventListener('click', (event)=>{\n      event.stopPropagation();\n\n      if(tooltipText.style.visibility === 'hidden'){\n        tooltipText.style.visibility = 'visible';\n      }else{\n        tooltipText.style.visibility = 'hidden';\n      }\n    })\n  }\n\n  render(){\n    return(\n      <Provider store={store}>\n        <GameRules/> {/* - tooltip text*/}\n        \n        <div className = 'tableContainer'>\n          <Table/>\n        </div> \n\n        <div className = 'wood'>\n          <ButtonsContainer/>\n          <ChipsContainer/>\n        </div>      \n\n        <div className = 'carpet'>\n\n        </div>\n      </Provider>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nlet rootDiv = document.getElementById('root');\n\nReactDOM.render(<App/>, rootDiv);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}